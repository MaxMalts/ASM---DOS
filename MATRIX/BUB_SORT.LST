Turbo Assembler	 Version 4.1	    03/15/20 19:00:04	    Page 1
bub_sort.asm



      1				     locals @@
      2
      3	0000			     .model tiny
      4
      5				     public Bubble_Sort
      6
      7	0000			     .data
      8	0000  06 08 03 09 03 06	04+  dataArray db 6, 8,	3, 9, 3, 6, 4, 7, 2, 3
      9	      07 02 03
     10	000A  000A		     dataSize dw 10D
     11
     12	000C			     .code
     13	      =B800		     VIDEO_SEGMENT   equ 0b800H
     14	      =0050		     SCREEN_WIDTH    equ 80D
     15	      =0019		     SCREEN_HEIGHT   equ 25D
     16	      =1000		     SLEEP_AMT	     equ 1000H
     17
     18				     ; Sorts an	array of bytes
     19				     ; Input:	     es	- array	address	segment
     20				     ;		     di	- array	address
     21				     ;		     cx	- array	size
     22				     ; Detroy:	     ax, bx, cx, dx
     23	0000			     Bubble_Sort proc
     24	      =00A0			     arrOffset	     equ SCREEN_WIDTH*2D   ; Offset between elements in	memory
     25
     26	0000  81 E9 00A0		     sub cx, arrOffset
     27	0004				     @@Sort_loop:
     28	0004  BA 0000				     mov dx, 0	     ; Current element index
     29
     30	0007					     @@SortInner_loop:
     31	0007  8B DF					     mov bx, di
     32	0009  03 DA					     add bx, dx
     33
     34	000B  26: 8A 07					     mov al, es:[bx]
     35	000E  26: 8A A7	00A0				     mov ah, es:[bx+arrOffset]
     36	0013  53					     push bx
     37	0014  E8 002A					     call ChCmp
     38	0017  80 FF 02					     cmp bh, 2
     39	001A  5B					     pop bx
     40	001B  72 0D					     jb	@@end_if_inverse
     41	001D  26: 8A A7	00A0					     mov ah, es:[bx+arrOffset]
     42	0022  26: 88 27						     mov es:[bx], ah
     43	0025  26: 88 87	00A0					     mov es:[bx+arrOffset], al
     44	002A						     @@end_if_inverse:
     45
     46	002A  81 C2 00A0				     add dx, arrOffset
     47	002E  3B D1					     cmp dx, cx
     48	0030  75 D5					     jne @@SortInner_loop
     49
     50	0032  51				     push cx
     51	0033  E8 002E				     call Sleep
     52	0036  59				     pop cx
     53
     54	0037  81 E9 00A0			     sub cx, arrOffset
     55	003B  83 F9 00				     cmp cx, 0
     56	003E  75 C4				     jne @@Sort_loop
     57
Turbo Assembler	 Version 4.1	    03/15/20 19:00:04	    Page 2
bub_sort.asm



     58	0040  C3			     ret
     59	0041				     Bubble_Sort endp
     60
     61				     ; Compares	two characters
     62				     ; (space is less than every character,
     63				     ; all other characters are	same)
     64				     ;
     65				     ; Input:	     al, ah - two characters
     66				     ; Output:	     bh: 0 - if	al<ah, 1 - al=ah, 2 - al>ah
     67	0041			     ChCmp proc
     68	0041  3C 20			     cmp al, ' '
     69	0043  75 0F			     jne @@if_not_alSpace
     70	0045  80 FC 20				     cmp ah, ' '
     71	0048  75 05				     jne @@if_not_ahSpace1
     72	004A  B7 01					     mov bh, 1
     73	004C  EB 15 90					     jmp @@end_proc
     74	004F					     @@if_not_ahSpace1:
     75	004F  B7 00					     mov bh, 0
     76	0051  EB 10 90					     jmp @@end_proc
     77
     78	0054				     @@if_not_alSpace:
     79	0054  80 FC 20				     cmp ah, ' '
     80	0057  75 05				     jne @@if_not_ahSpace2
     81	0059  B7 02					     mov bh, 2
     82	005B  EB 06 90					     jmp @@end_proc
     83	005E					     @@if_not_ahSpace2:
     84	005E  B7 01					     mov bh, 1
     85	0060  EB 01 90					     jmp @@end_proc
     86
     87	0063				     @@end_proc:
     88	0063  C3			     ret
     89	0064				     ChCmp   endp
     90
     91					     ; Sleeps
     92					     ; Destroy:	     cx
     93	0064				     Sleep proc
     94	0064  B9 1000				     mov cx, SLEEP_AMT
     95	0067					     @@Sleep_loop:
     96	0067  E2 FE					     loop @@Sleep_loop
     97
     98	0069  C3				     ret
     99	006A					     Sleep endp
    100				     end
Turbo Assembler	 Version 4.1	    03/15/20 19:00:04	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/15/20"
??FILENAME			  Text	 "bub_sort"
??TIME				  Text	 "19:00:04"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@END_IF_INVERSE		  Near	 DGROUP:002A
@@END_PROC			  Near	 DGROUP:0063
@@IF_NOT_AHSPACE1		  Near	 DGROUP:004F
@@IF_NOT_AHSPACE2		  Near	 DGROUP:005E
@@IF_NOT_ALSPACE		  Near	 DGROUP:0054
@@SLEEP_LOOP			  Near	 DGROUP:0067
@@SORTINNER_LOOP		  Near	 DGROUP:0007
@@SORT_LOOP			  Near	 DGROUP:0004
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 BUB_SORT
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
ARROFFSET			  Number 00A0
BUBBLE_SORT			  Near	 DGROUP:0000
CHCMP				  Near	 DGROUP:0041
DATAARRAY			  Byte	 DGROUP:0000
DATASIZE			  Word	 DGROUP:000A
SCREEN_HEIGHT			  Number 0019
SCREEN_WIDTH			  Number 0050
SLEEP				  Near	 DGROUP:0064
SLEEP_AMT			  Number 1000
VIDEO_SEGMENT			  Number B800

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  000C Word	  Public  DATA
  _TEXT				  16  006A Word	  Public  CODE
