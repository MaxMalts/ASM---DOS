Turbo Assembler	 Version 4.1	    03/03/20 00:48:10	    Page 1
border.asm



      1				     ; This program prints a border with a message inside.
      2				     ; You can set the border properties and the message
      3				     ; in data segment.
      4
      5				     locals @@
      6
      7	0000			     .model tiny
      8
      9				     public Message, Draw_Border, Draw_Message
     10	0000			     .data
     11	0000  23			     bordLeftX db 35D
     12	0001  0A			     bordTopY db 10D
     13	0002  2D			     bordRightX	db 45D
     14	0003  0E			     bordBottomY db 14D
     15	0004  50			     screenWidth db 80D
     16
     17	0005  27			     msgX db 39D
     18	0006  0C			     msgY db 12D
     19	0007  48 65 6C 6C 6F 24		     Message db	'Hello$'
     20
     21
     22	000D			     .code
     23	0000			     Start:
     24
     25					     ; Draws border
     26					     ; Input:
     27					     ; Variables:    bordLeftX db 30D
     28					     ;		     bordTopY db 12D
     29					     ;		     bordRightX	db 50D
     30					     ;		     bordBottomY db 18D
     31					     ;		     screenWidth
     32					     ; Destroy:	     ax, bx, cx, di, es
     33	0000				     Draw_Border proc
     34	      =00C9				     topLeftChar     equ 'É'
     35	      =00CD				     topChar	     equ 'Í'
     36	      =00BB				     topRightChar    equ '»'
     37	      =00BA				     rightChar	     equ 'º'
     38	      =00BC				     bottomRightChar equ '¼'
     39	      =00CD				     bottomChar	     equ 'Í'
     40	      =00C8				     bottomLeftChar  equ 'È'
     41	      =00BA				     leftChar	     equ 'º'
     42	      =0020				     innerChar	     equ ' '
     43	      =0060				     charColor	     equ 01100000B
     44
     45	0000  B8 B800				     mov ax, 0b800H
     46	0003  8E C0				     mov es, ax
     47
     48	0005  8A 3E 0001r			     mov bh, bordTopY	 ; Current y axis
     49
     50	0009  8A C7				     mov al, bh	     ; Calculating top left corner position
     51	000B  F6 26 0004r			     mul screenWidth
     52	000F  B6 00				     mov dh, 0
     53	0011  8A 16 0000r			     mov dl, bordLeftX
     54	0015  03 C2				     add ax, dx
     55	0017  03 C0				     add ax, ax
     56	0019  8B F8				     mov di, ax
     57
Turbo Assembler	 Version 4.1	    03/03/20 00:48:10	    Page 2
border.asm



     58	001B  B4 60				     mov ah, charColor	     ; Drawing top line
     59	001D  B0 C9				     mov al, topLeftChar
     60	001F  AB				     stosw
     61	0020  B0 CD				     mov al, topChar
     62	0022  B5 00				     mov ch, 0
     63	0024  8A 0E 0002r			     mov cl, bordRightX
     64	0028  2A 0E 0000r			     sub cl, bordLeftX
     65	002C  FE C9				     dec cl
     66	002E  F3> AB				     rep stosw
     67	0030  B0 BB				     mov al, topRightChar
     68	0032  AB				     stosw
     69	0033  FE C7				     inc bh
     70
     71	0035					     @@Middle_loop:
     72	0035  8A C7					     mov al, bh	     ; Calculating current position
     73	0037  F6 26 0004r				     mul screenWidth
     74	003B  B6 00					     mov dh, 0
     75	003D  8A 16 0000r				     mov dl, bordLeftX
     76	0041  03 C2					     add ax, dx
     77	0043  03 C0					     add ax, ax
     78	0045  8B F8					     mov di, ax
     79
     80	0047  B4 60					     mov ah, charColor	     ; Drawing current line
     81	0049  B0 BA					     mov al, leftChar
     82	004B  AB					     stosw
     83	004C  B0 20					     mov al, innerChar
     84	004E  B5 00					     mov ch, 0
     85	0050  8A 0E 0002r				     mov cl, bordRightX
     86	0054  2A 0E 0000r				     sub cl, bordLeftX
     87	0058  FE C9					     dec cl
     88	005A  F3> AB					     rep stosw
     89	005C  B0 BA					     mov al, rightChar
     90	005E  AB					     stosw
     91	005F  FE C7					     inc bh
     92
     93	0061  3A 3E 0003r				     cmp bh, bordBottomY
     94	0065  E0 CE					     loopne @@Middle_loop
     95
     96	0067  8A C7				     mov al, bh	     ; Calculating bottom left corner position
     97	0069  F6 26 0004r			     mul screenWidth
     98	006D  B6 00				     mov dh, 0
     99	006F  8A 16 0000r			     mov dl, bordLeftX
    100	0073  03 C2				     add ax, dx
    101	0075  03 C0				     add ax, ax
    102	0077  8B F8				     mov di, ax
    103
    104	0079  B4 60				     mov ah, charColor	     ; Drawing bottom line
    105	007B  B0 C8				     mov al, bottomLeftChar
    106	007D  AB				     stosw
    107	007E  B0 CD				     mov al, bottomChar
    108	0080  B5 00				     mov ch, 0
    109	0082  8A 0E 0002r			     mov cl, bordRightX
    110	0086  2A 0E 0000r			     sub cl, bordLeftX
    111	008A  FE C9				     dec cl
    112	008C  F3> AB				     rep stosw
    113	008E  B0 BC				     mov al, bottomRightChar
    114	0090  AB				     stosw
Turbo Assembler	 Version 4.1	    03/03/20 00:48:10	    Page 3
border.asm



    115	0091  FE C7				     inc bh
    116
    117	0093  E8 0001				     call Draw_shadow
    118
    119	0096  C3				     ret
    120	0097					     Draw_border endp
    121
    122
    123					     ; Draws shadow of the border
    124					     ; Input:
    125					     ; Variables:    bordLeftX db 30D
    126					     ;		     bordTopY db 12D
    127					     ;		     bordRightX	db 50D
    128					     ;		     bordBottomY db 18D
    129					     ;		     screenWidth
    130					     ; Destroy:	     ax, bx, cx, di, es
    131	0097				     Draw_shadow proc
    132	      =0070				     ShadowColor     equ 01110000B
    133
    134	0097  B8 B800				     mov ax, 0b800H
    135	009A  8E C0				     mov es, ax
    136
    137	009C  8A 3E 0003r			     mov bh, bordBottomY     ; Bottom left y axis
    138	00A0  FE C7				     inc bh
    139
    140	00A2  8A C7				     mov al, bh	     ; Calculating bottom left corner position
    141	00A4  F6 26 0004r			     mul screenWidth
    142	00A8  B6 00				     mov dh, 0
    143	00AA  8A 16 0000r			     mov dl, bordLeftX
    144	00AE  FE C2				     inc dl
    145	00B0  03 C2				     add ax, dx
    146	00B2  03 C0				     add ax, ax
    147	00B4  8B F8				     mov di, ax
    148
    149	00B6  B0 70				     mov al, shadowColor     ; Drawing bottom shadow
    150	00B8  B5 00				     mov ch, 0
    151	00BA  8A 0E 0002r			     mov cl, bordRightX
    152	00BE  2A 0E 0000r			     sub cl, bordLeftX
    153	00C2  FE C1				     inc cl
    154	00C4					     @@bottom_loop:
    155	00C4  47					     inc di
    156	00C5  AA					     stosb
    157	00C6  E2 FC					     loop @@bottom_loop
    158	00C8  4F				     dec di
    159
    160	00C9  8A 0E 0003r			     mov cl, bordBottomY     ; Drawing left shadow
    161	00CD  2A 0E 0001r			     sub cl, bordTopY
    162	00D1					     @@left_loop:
    163	00D1  81 EF 00A0				     sub di, 80D*2D
    164	00D5  26: 88 05					     mov es:[di], al
    165	00D8  E2 F7					     loop @@left_loop
    166
    167	00DA  C3				     ret
    168	00DB					     Draw_shadow endp
    169
    170
    171					     ; Draws message in	border
Turbo Assembler	 Version 4.1	    03/03/20 00:48:10	    Page 4
border.asm



    172					     ; Input:	     di	- message address
    173					     ;		     es	- message address segment
    174					     ; Variables:    screenWidth
    175					     ;		     MsgX
    176					     ;		     MsgY
    177					     ; Destroy:	     ax, bx, cx, dx, es, di
    178	00DB				     Draw_message proc
    179	      =0060				     msgColor	     equ 01100000B
    180
    181	00DB  8B DF				     mov bx, di	     ; Saving message address
    182
    183	00DD  B0 24				     mov al, '$'
    184	00DF  B9 FFFF				     mov cx, 0ffffH
    185	00E2  F2> AE				     repne scasb
    186
    187	00E4  B8 B800				     mov ax, 0b800H
    188	00E7  8E C0				     mov es, ax
    189
    190	00E9  8B CF				     mov cx, di	     ; Message length
    191	00EB  2B CB				     sub cx, bx
    192	00ED  49				     dec cx
    193	00EE  8B FB				     mov di, bx
    194
    195	00F0  B8 0000				     mov ax, 0
    196	00F3  A0 0006r				     mov al, msgY    ; Calculating screen position
    197	00F6  F6 26 0004r			     mul screenWidth
    198	00FA  B6 00				     mov dh, 0
    199	00FC  8A 16 0005r			     mov dl, msgX
    200	0100  03 C2				     add ax, dx
    201	0102  03 C0				     add ax, ax
    202	0104  8B F8				     mov di, ax
    203
    204	0106  B4 60				     mov ah, msgColor
    205	0108					     @@Print_loop:
    206	0108  8A 07					     mov al, [bx]
    207	010A  AB					     stosw
    208	010B  43					     inc bx
    209	010C  E2 FA					     loop @@Print_loop
    210
    211	010E  C3				     ret
    212	010F					     Draw_message endp
    213				     end Start
Turbo Assembler	 Version 4.1	    03/03/20 00:48:10	    Page 5
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/03/20"
??FILENAME			  Text	 "border  "
??TIME				  Text	 "00:48:10"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@BOTTOM_LOOP			  Near	 DGROUP:00C4
@@LEFT_LOOP			  Near	 DGROUP:00D1
@@MIDDLE_LOOP			  Near	 DGROUP:0035
@@PRINT_LOOP			  Near	 DGROUP:0108
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 BORDER
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
BORDBOTTOMY			  Byte	 DGROUP:0003
BORDLEFTX			  Byte	 DGROUP:0000
BORDRIGHTX			  Byte	 DGROUP:0002
BORDTOPY			  Byte	 DGROUP:0001
BOTTOMCHAR			  Number 00CD
BOTTOMLEFTCHAR			  Number 00C8
BOTTOMRIGHTCHAR			  Number 00BC
CHARCOLOR			  Number 0060
DRAW_BORDER			  Near	 DGROUP:0000
DRAW_MESSAGE			  Near	 DGROUP:00DB
DRAW_SHADOW			  Near	 DGROUP:0097
INNERCHAR			  Number 0020
LEFTCHAR			  Number 00BA
MESSAGE				  Byte	 DGROUP:0007
MSGCOLOR			  Number 0060
MSGX				  Byte	 DGROUP:0005
MSGY				  Byte	 DGROUP:0006
RIGHTCHAR			  Number 00BA
SCREENWIDTH			  Byte	 DGROUP:0004
SHADOWCOLOR			  Number 0070
START				  Near	 DGROUP:0000
TOPCHAR				  Number 00CD
TOPLEFTCHAR			  Number 00C9
TOPRIGHTCHAR			  Number 00BB

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  000D Word	  Public  DATA
  _TEXT				  16  010F Word	  Public  CODE
