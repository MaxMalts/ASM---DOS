Turbo Assembler	 Version 4.1	    02/18/20 19:52:31	    Page 1
video_3.asm



      1				     ; This program outputs a message in border	to the screen
      2				     ; via the video memory. You can adjust the	values
      3				     ; under "User entered data" comment and message under Message variable
      4				     ; PS: It's	same as	video_2	but uses string	commands
      5
      6	0000			     .model tiny
      7	0000			     .code
      8				     org 100H
      9
     10	0100			     Start:
     11	      =000A			     CR	     equ 10D
     12	      =000D			     LF	     equ 13D
     13	      =	CR, LF			     CRLF    equ CR, LF
     14
     15						     ; User entered data:
     16	      =0050				     scrWidth	     equ 80D
     17
     18	      =001E				     msgBegX	     equ 30D
     19	      =0008				     msgBegY	     equ 8D
     20
     21	      =000F				     msgColor	     equ 00001111B
     22
     23	      =0019				     bordBegX	     equ 25D
     24	      =0006				     bordBegY	     equ 6D
     25
     26	      =000F				     bordColor	    equ	00001111B
     27
     28						     ; Characters for border:
     29	      =00C9				     leftTopBord     equ 0c9H
     30	      =00C8				     leftBottomBord  equ 0c8H
     31	      =00BB				     rightTopBord    equ 0bbH
     32	      =00BC				     rightBottomBord equ 0bcH
     33	      =00BA				     LeftBord	     equ 0baH
     34	      =00BA				     RightBord	     equ 0baH
     35	      =00CD				     TopBord	     equ 0cdH
     36	      =00CD				     BottomBord	     equ 0cdH
     37
     38
     39
     40	0100  B8 B800			     mov ax, 0b800H	     ; Video memory
     41	0103  8E C0			     mov es, ax
     42
     43
     44					     ; Printing	message:
     45	0105  BB 0000r			     mov bx, offset Message		     ; Current character address
     46	0108  BF 053C			     mov di, (scrWidth*msgBegY+msgBegX)*2D   ; Video position
     47	010B  B2 00			     mov dl, 0				     ; Message wigth
     48	010D  B6 01			     mov dh, 1				     ; Message height
     49	010F  B9 0000			     mov cx, 0				     ; For loop
     50	0112				     Message_loop:
     51	0112  80 3F 0A				     cmp byte ptr [bx],	CR
     52	0115  75 27				     jne if_not_CR
     53	0117  B0 08					     mov al, msgBegY
     54	0119  02 C6					     add al, dh
     55	011B  B4 50					     mov ah, scrWidth
     56	011D  F6 E4					     mul ah
     57	011F  05 001E					     add ax, msgBegX
Turbo Assembler	 Version 4.1	    02/18/20 19:52:31	    Page 2
video_3.asm



     58	0122  03 C0					     add ax, ax
     59	0124  8B F8					     mov di, ax
     60
     61	0126  FE C6					     inc dh
     62	0128  83 C3 02					     add bx, 2D
     63
     64	012B  38 16 0067r				     cmp curLineWidth, dl
     65	012F  76 04					     jna if_not_CurMoreMax
     66	0131  8A 16 0067r					     mov dl, curLineWidth
     67	0135						     if_not_CurMoreMax:
     68
     69	0135  C6 06 0067r 00 90				     mov curLineWidth, 0
     70	013B  EB 0B 90					     jmp end_if_CR
     71	013E					     if_not_CR:
     72	013E  8A 07					     mov al, [bx]
     73	0140  B4 0F					     mov ah, msgColor
     74	0142  AB					     stosw	     ; Print current character
     75	0143  FE 06 0067r				     inc curLineWidth
     76
     77	0147  43					     inc bx
     78	0148					     end_if_CR:
     79
     80	0148  8A 2F				     mov ch, [bx]
     81	014A  80 ED 24				     sub ch, '$'
     82	014D  E0 C3				     loopnz Message_loop
     83
     84	014F  38 16 0067r		     cmp curLineWidth, dl
     85	0153  76 04			     jna if_not_CurMoreMax2
     86	0155  8A 16 0067r			     mov dl, curLineWidth
     87	0159				     if_not_CurMoreMax2:
     88
     89	0159  88 16 0065r		     mov msgWidth, dl	     ; Saving message width
     90	015D  88 36 0066r		     mov msgHeight, dh	     ; Saving message height
     91
     92
     93					     ; Generating border:
     94					     ; Calculating corners positions:
     95					     ; bottom left corner:
     96	0161  B7 19			     mov bh, bordBegX				     ; x axis
     97	0163  B3 09			     mov bl, bordBegY+(msgBegY-bordBegY)*2D-1D	     ; y axis
     98	0165  02 1E 0066r		     add bl, msgHeight
     99
    100	0169  B9 0000			     mov cx, 0	     ; cl - temp bl or bh, to add to ax
    101
    102	016C  B0 50			     mov al, scrWidth	     ; ax - current corner position
    103	016E  F6 E3			     mul bl
    104	0170  8A CF			     mov cl, bh
    105	0172  03 C1			     add ax, cx
    106	0174  03 C0			     add ax, ax
    107	0176  A3 006Ar			     mov leftBottomCorner, ax
    108
    109					     ; bottom right corner:
    110	0179  B7 22			     mov bh, bordBegX+(msgBegX-bordBegX)*2D-1D
    111	017B  02 3E 0065r		     add bh, msgWidth
    112
    113	017F  B0 50			     mov al, scrWidth	     ; ax - current corner position
    114	0181  F6 E3			     mul bl
Turbo Assembler	 Version 4.1	    02/18/20 19:52:31	    Page 3
video_3.asm



    115	0183  8A CF			     mov cl, bh
    116	0185  03 C1			     add ax, cx
    117	0187  03 C0			     add ax, ax
    118	0189  A3 006Er			     mov rightBottomCorner, ax
    119
    120					     ; top right corner:
    121	018C  B3 06			     mov bl, bordBegY
    122
    123	018E  B0 50			     mov al, scrWidth	     ; ax - current corner position
    124	0190  F6 E3			     mul bl
    125	0192  8A CF			     mov cl, bh
    126	0194  03 C1			     add ax, cx
    127	0196  03 C0			     add ax, ax
    128	0198  A3 006Cr			     mov rightTopCorner, ax
    129
    130
    131					     ; Printing	corner:
    132	019B  8B 3E 0068r		     mov di, leftTopCorner   ; Current cursor position
    133
    134	019F  B0 C9			     mov al, leftTopBord
    135	01A1  B4 0F			     mov ah, bordColor
    136	01A3  FC			     cld
    137	01A4  AB			     stosw		     ; Printing	top left corner
    138
    139
    140					     ; Top left	to right:
    141	01A5  8B 0E 006Cr		     mov cx, rightTopCorner
    142	01A9  2B 0E 0068r		     sub cx, leftTopCorner
    143	01AD  D1 E9			     shr cx, 1
    144	01AF  49			     dec cx
    145	01B0  B0 CD			     mov al, TopBord
    146	01B2  B4 0F			     mov ah, bordColor
    147	01B4  F3> AB			     rep stosw
    148
    149
    150	01B6  B0 BB			     mov al, rightTopBord
    151	01B8  B4 0F			     mov ah, bordColor
    152	01BA  26: 89 05			     mov word ptr es:[di], ax	     ; Printing	top right corner
    153	01BD  81 C7 00A0		     add di, scrWidth*2D
    154
    155
    156	01C1  B0 BA			     mov al, rightBord
    157	01C3  B4 0F			     mov ah, bordColor
    158	01C5				     TopToBottomRight_loop:
    159	01C5  26: 89 05				     mov word ptr es:[di], ax
    160	01C8  81 C7 00A0			     add di, scrWidth*2D
    161
    162	01CC  8B CF				     mov cx, di
    163	01CE  2B 0E 006Er			     sub cx, rightBottomCorner
    164	01D2  E0 F1				     loopnz TopToBottomRight_loop
    165
    166
    167	01D4  B0 BC			     mov al, rightBottomBord
    168	01D6  B4 0F			     mov ah, bordColor
    169	01D8  FD			     std
    170	01D9  AB			     stosw		     ; Printing	bottom right corner
    171
Turbo Assembler	 Version 4.1	    02/18/20 19:52:31	    Page 4
video_3.asm



    172
    173					     ; Bottom right to left:
    174	01DA  8B 0E 006Er		     mov cx, rightBottomCorner
    175	01DE  2B 0E 006Ar		     sub cx, leftBottomCorner
    176	01E2  D1 E9			     shr cx, 1
    177	01E4  49			     dec cx
    178	01E5  B0 CD			     mov al, TopBord
    179	01E7  B4 0F			     mov ah, bordColor
    180	01E9  F3> AB			     rep stosw
    181
    182
    183	01EB  B0 C8			     mov al, leftBottomBord
    184	01ED  B4 0F			     mov ah, bordColor
    185	01EF  26: 89 05			     mov word ptr es:[di], ax	     ; Printing	bottom left corner
    186	01F2  81 EF 00A0		     sub di, scrWidth*2D
    187
    188	01F6  B0 BA			     mov al, leftBord
    189	01F8  B4 0F			     mov ah, bordColor
    190	01FA				     BottomToTopLeft_loop:
    191	01FA  26: 89 05				     mov word ptr es:[di], ax
    192	01FD  81 EF 00A0			     sub di, scrWidth*2D
    193
    194	0201  8B CF				     mov cx, di
    195	0203  2B 0E 0068r			     sub cx, leftTopCorner
    196	0207  E0 F1				     loopnz BottomToTopLeft_loop
    197
    198
    199	0209  B8 4C00			     mov ax, 4c00H   ; Exiting
    200	020C  CD 21			     int 21H
    201
    202
    203
    204	020E				     .data
    205	0000  48 65 6C 6C 6F 21	0A+	     Message db	'Hello!', CRLF,	\
    206	      0D 54 68 69 73 20	69+		     'This is the message', CRLF, \
    207	      73 20 74 68 65 20	6D+		     'that was drawn directly via', CRLF, \
    208	      65 73 73 61 67 65	0A+		     'the video	memory.	alalalaalalallaalalalala$'
    209	      0D 74 68 61 74 20	77+
    210	      61 73 20 64 72 61	77+
    211	      6E 20 64 69 72 65	63+
    212	      74 6C 79 20 76 69	61+
    213	      0A 0D 74 68 65 20	76+
    214	      69 64 65 6F 20 6D	65+
    215	      6D 6F 72 79 2E 20	61+
    216	      6C 61 6C 61 6C 61	61+
    217	      6C 61 6C 61 6C 6C	61+
    218	      61 6C 61 6C 61 6C	61+
    219	      6C 61 24
    220
    221					     ; Technical variables
    222	0065  00			     msgWidth db 0
    223	0066  00			     msgHeight db 0
    224
    225	0067  00			     curLineWidth db 0
    226
    227	0068  03F2			     leftTopCorner dw (scrWidth*bordBegY+BordBegX)*2D
    228	006A  0000			     leftBottomCorner dw 0
Turbo Assembler	 Version 4.1	    02/18/20 19:52:31	    Page 5
video_3.asm



    229	006C  0000			     rightTopCorner dw 0
    230	006E  0000			     rightBottomCorner dw 0
    231
    232				     end Start
Turbo Assembler	 Version 4.1	    02/18/20 19:52:31	    Page 6
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/18/20"
??FILENAME			  Text	 "video_3 "
??TIME				  Text	 "19:52:31"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _DATA
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 VIDEO_3
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
BORDBEGX			  Number 0019
BORDBEGY			  Number 0006
BORDCOLOR			  Number 000F
BOTTOMBORD			  Number 00CD
BOTTOMTOTOPLEFT_LOOP		  Near	 DGROUP:01FA
CR				  Number 000A
CRLF				  Text	 CR, LF
CURLINEWIDTH			  Byte	 DGROUP:0067
END_IF_CR			  Near	 DGROUP:0148
IF_NOT_CR			  Near	 DGROUP:013E
IF_NOT_CURMOREMAX		  Near	 DGROUP:0135
IF_NOT_CURMOREMAX2		  Near	 DGROUP:0159
LEFTBORD			  Number 00BA
LEFTBOTTOMBORD			  Number 00C8
LEFTBOTTOMCORNER		  Word	 DGROUP:006A
LEFTTOPBORD			  Number 00C9
LEFTTOPCORNER			  Word	 DGROUP:0068
LF				  Number 000D
MESSAGE				  Byte	 DGROUP:0000
MESSAGE_LOOP			  Near	 DGROUP:0112
MSGBEGX				  Number 001E
MSGBEGY				  Number 0008
MSGCOLOR			  Number 000F
MSGHEIGHT			  Byte	 DGROUP:0066
MSGWIDTH			  Byte	 DGROUP:0065
RIGHTBORD			  Number 00BA
RIGHTBOTTOMBORD			  Number 00BC
RIGHTBOTTOMCORNER		  Word	 DGROUP:006E
RIGHTTOPBORD			  Number 00BB
RIGHTTOPCORNER			  Word	 DGROUP:006C
SCRWIDTH			  Number 0050
START				  Near	 DGROUP:0100
TOPBORD				  Number 00CD
TOPTOBOTTOMRIGHT_LOOP		  Near	 DGROUP:01C5
Turbo Assembler	 Version 4.1	    02/18/20 19:52:31	    Page 7
Symbol Table




Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0070 Word	  Public  DATA
  _TEXT				  16  020E Word	  Public  CODE
